services:
  grafana:
    extends:
      file: .config/docker-compose-base.yaml
      service: grafana

  graphite-atwood:
    image: graphiteapp/graphite-statsd
    # Since Docker containers can communicate over an internal network, you only
    # need to uncomment these ports if you want to connect to Graphite from
    # outside the network. Grafana can use URLs like `http://graphite-atwood`
    # to connect to these Graphite instances.
    #
    # I've left the Graphite web UI open so that you can try running Graphite
    # queries directly without going through Grafana. You will never _need_ to
    # do this, but it could be helpful to understand the difference between
    # Graphite and Grafana.
    #
    # For bonus points, try running `curl http://localhost:8080/metrics/index.json`
    # to see all series names that Graphite currently stores!
    # https://graphite.readthedocs.io/en/latest/metrics_api.html
    ports:
      - "9080:80"             # graphite web UI
      # - "8003-8004:2003-2004" # carbon backend receiver
      # - "8023-8024:2023-2024" # carbon backend aggregator
      # - "8125:8125/udp"       # statsd
      # - "8126:8126"           # statsd admin
  graphite-sontag:
    image: graphiteapp/graphite-statsd
    ports:
      - "9081:80"             # graphite web UI
      # - "8003-8004:2003-2004" # carbon backend receiver
      # - "8023-8024:2023-2024" # carbon backend aggregator
      # - "8125:8125/udp"       # statsd
      # - "8126:8126"           # statsd admin
  graphite-linde:
    image: graphiteapp/graphite-statsd
    ports:
      - "9082:80"             # graphite web UI
      # - "8003-8004:2003-2004" # carbon backend receiver
      # - "8023-8024:2023-2024" # carbon backend aggregator
      # - "8125:8125/udp"       # statsd
      # - "8126:8126"           # statsd admin
  # service-metric-simulator is a Go application I wrote to emit mock Graphite
  # metrics to multiple Graphite instances. It allows you to define mock
  # microservices with sets of mock metrics.
  service-metric-simulator:
    # Using "build" instead of "image" tells Docker Compose that the Docker
    # image must be built instead of pulled from Docker Hub. Running
    # `docker compose up` will use ./service-metrics-simulator/Dockerfile to
    # build the image.
    build: ./service-metrics-simulator
    environment:
      SIMULATOR_CONFIG_PATH: "/etc/service-metrics-simulator/example-config.json"
    volumes:
      - "./service-metrics-simulator/config:/etc/service-metrics-simulator"
